plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id "org.openapi.generator" version "5.3.0"
    id 'maven-publish'
    id "org.jlleitschuh.gradle.ktlint" version "10.2.1"
    id "io.gitlab.arturbosch.detekt" version "1.20.0-RC1"
}

def getArtifactId = { ->
    return "imx-android-sdk"
}

def getVersionName = { ->
    return "0.0.13"
}

task addHeader(type:Exec) {
    workingDir '..'
    commandLine 'python', 'addHeaderScript.py', getVersionName()
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 27
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    openApiGenerate {
        generatorName = "kotlin"
        inputSpec = "$rootDir/swagger.json".toString()
        outputDir = "$buildDir/generated".toString()
        apiPackage = "com.immutable.sdk.api"
        invokerPackage = "com.immutable.sdk.invoker"
        modelPackage = "com.immutable.sdk.model"
        configOptions = [
                dateLibrary: "java8"
        ]
    }

    sourceSets {
        main {
            java.srcDirs = ["$buildDir/generated/src/main/kotlin"]
        }
    }

    // Generate all apis before every build
    preBuild.dependsOn(tasks.openApiGenerate)

    // Add SDK version header to all API endpoint
    preBuild.dependsOn(tasks.addHeader)
    tasks.addHeader.shouldRunAfter(tasks.openApiGenerate)

    preBuild.dependsOn(tasks.ktlintCheck)
    preBuild.dependsOn(tasks.detekt)
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'

    // Required for the generated SDK code
    implementation "com.squareup.moshi:moshi-kotlin:1.13.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.3"

    // Web3
    implementation "org.web3j:core:4.8.7-android"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.12.3"

    // Detekt
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.20.0-RC1"
}

def githubProperties = new Properties()
def githubPropertiesFile = file("github.properties")
if (githubPropertiesFile.exists()) {
    githubProperties.load(new FileInputStream(githubPropertiesFile))
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.immutable.sdk' // Replace with group ID
            artifactId getArtifactId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtifactId()}-release.aar")
        }
    }

    repositories {
        maven {
            name = "imx-android-sdk"
            url = uri("https://maven.pkg.github.com/immutable/imx-android-sdk")
            credentials {
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}

ktlint {
    debug = true
    verbose = true
    android = true
    outputToConsole = true
    outputColorName = "RED"
    enableExperimentalRules = false
    disabledRules = ["no-wildcard-imports", "import-ordering"]
    filter {
        exclude { projectDir.toURI().relativize(it.file.toURI()).path.contains("/generated/") }
    }
}

detekt {
    buildUponDefaultConfig = true
    allRules = false // activate all available (even unstable) rules.
    config = files("../.github/detekt/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
}
